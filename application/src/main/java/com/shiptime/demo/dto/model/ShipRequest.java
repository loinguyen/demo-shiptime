/**
 * SANDBOX REST API
 * Welcome to the Rest API documentation. Don't have API keys? Login or create an account <a href=\"https://restapi.appspaces.ca/\">here</a> to get started.
 *
 * OpenAPI spec version: 0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.shiptime.demo.dto.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;


/**
 * Represents request to create a shipment. If all properties are set, the rateRequest, carrierId, and serviceId will be used and quoteId is discarded.Note that shipment charge will be based on the rateRequest and the shipment billing amount may differ from the amount of the quote. This can happen if rateRequest is altered, that is not the same as during rating.  In order to ensure billing consistency between rating and shipping one can use the quoteId only in shipRequest, without setting other properties.  Note, that the quoteId is only valid for about 15 min since rating.
 */
public class ShipRequest   {
  @SerializedName("rateRequest")
  private RateRequest rateRequest = null;

  @SerializedName("carrierId")
  private String carrierId = null;

  @SerializedName("serviceId")
  private String serviceId = null;

  @SerializedName("quoteId")
  private String quoteId = null;

  @SerializedName("pickupDetail")
  private PickupDetailModel pickupDetail = null;

  @SerializedName("ref1")
  private String ref1 = null;

  @SerializedName("ref2")
  private String ref2 = null;

  public ShipRequest rateRequest(RateRequest rateRequest) {
    this.rateRequest = rateRequest;
    return this;
  }

   /**
   * Rate request with shipment parameters.
   * @return rateRequest
  **/
  public RateRequest getRateRequest() {
    return rateRequest;
  }

  public void setRateRequest(RateRequest rateRequest) {
    this.rateRequest = rateRequest;
  }

  public ShipRequest carrierId(String carrierId) {
    this.carrierId = carrierId;
    return this;
  }

   /**
   * Carrier Id selected based on previous rating result
   * @return carrierId
  **/
  public String getCarrierId() {
    return carrierId;
  }

  public void setCarrierId(String carrierId) {
    this.carrierId = carrierId;
  }

  public ShipRequest serviceId(String serviceId) {
    this.serviceId = serviceId;
    return this;
  }

   /**
   * Service Id of the selected carrier
   * @return serviceId
  **/
  public String getServiceId() {
    return serviceId;
  }

  public void setServiceId(String serviceId) {
    this.serviceId = serviceId;
  }

  public ShipRequest quoteId(String quoteId) {
    this.quoteId = quoteId;
    return this;
  }

   /**
   * The quote Id referencing a selected quote from rating response. Will only be used if no other parameters are present in request, otherwise is ignored.
   * @return quoteId
  **/

  public String getQuoteId() {
    return quoteId;
  }

  public void setQuoteId(String quoteId) {
    this.quoteId = quoteId;
  }

  public ShipRequest pickupDetail(PickupDetailModel pickupDetail) {
    this.pickupDetail = pickupDetail;
    return this;
  }

   /**
   * Pickup detail. You may not set pickup date since it will be ignored and replaced by date of rate request
   * @return pickupDetail
  **/
  public PickupDetailModel getPickupDetail() {
    return pickupDetail;
  }

  public void setPickupDetail(PickupDetailModel pickupDetail) {
    this.pickupDetail = pickupDetail;
  }

  public ShipRequest ref1(String ref1) {
    this.ref1 = ref1;
    return this;
  }

   /**
   * Reference 1
   * @return ref1
  **/
  public String getRef1() {
    return ref1;
  }

  public void setRef1(String ref1) {
    this.ref1 = ref1;
  }

  public ShipRequest ref2(String ref2) {
    this.ref2 = ref2;
    return this;
  }

   /**
   * Reference 2
   * @return ref2
  **/
  public String getRef2() {
    return ref2;
  }

  public void setRef2(String ref2) {
    this.ref2 = ref2;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShipRequest shipRequest = (ShipRequest) o;
    return Objects.equals(this.rateRequest, shipRequest.rateRequest) &&
        Objects.equals(this.carrierId, shipRequest.carrierId) &&
        Objects.equals(this.serviceId, shipRequest.serviceId) &&
        Objects.equals(this.quoteId, shipRequest.quoteId) &&
        Objects.equals(this.pickupDetail, shipRequest.pickupDetail) &&
        Objects.equals(this.ref1, shipRequest.ref1) &&
        Objects.equals(this.ref2, shipRequest.ref2);
  }

  @Override
  public int hashCode() {
    return Objects.hash(rateRequest, carrierId, serviceId, quoteId, pickupDetail, ref1, ref2);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShipRequest {\n");
    
    sb.append("    rateRequest: ").append(toIndentedString(rateRequest)).append("\n");
    sb.append("    carrierId: ").append(toIndentedString(carrierId)).append("\n");
    sb.append("    serviceId: ").append(toIndentedString(serviceId)).append("\n");
    sb.append("    quoteId: ").append(toIndentedString(quoteId)).append("\n");
    sb.append("    pickupDetail: ").append(toIndentedString(pickupDetail)).append("\n");
    sb.append("    ref1: ").append(toIndentedString(ref1)).append("\n");
    sb.append("    ref2: ").append(toIndentedString(ref2)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

