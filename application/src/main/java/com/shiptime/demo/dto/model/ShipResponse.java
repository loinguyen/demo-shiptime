/**
 * SANDBOX REST API
 * Welcome to the Rest API documentation. Don't have API keys? Login or create an account <a href=\"https://restapi.appspaces.ca/\">here</a> to get started.
 *
 * OpenAPI spec version: 0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.shiptime.demo.dto.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import java.util.ArrayList;
import java.util.List;


/**
 * Represents results of request to create a shipment
 */
public class ShipResponse   {
  @SerializedName("shipId")
  private Integer shipId = null;

  @SerializedName("trackingNumbers")
  private List<String> trackingNumbers = new ArrayList<String>();

  @SerializedName("labelUrl")
  private String labelUrl = null;

  @SerializedName("invoiceUrl")
  private String invoiceUrl = null;

  @SerializedName("carrierTrackingUrl")
  private String carrierTrackingUrl = null;

  @SerializedName("pickupConfirmation")
  private String pickupConfirmation = null;

  @SerializedName("messages")
  private List<String> messages = new ArrayList<String>();

  public ShipResponse shipId(Integer shipId) {
    this.shipId = shipId;
    return this;
  }

   /**
   * Shipment Id
   * @return shipId
  **/
  public Integer getShipId() {
    return shipId;
  }

  public void setShipId(Integer shipId) {
    this.shipId = shipId;
  }

  public ShipResponse trackingNumbers(List<String> trackingNumbers) {
    this.trackingNumbers = trackingNumbers;
    return this;
  }

  public ShipResponse addTrackingNumbersItem(String trackingNumbersItem) {
    this.trackingNumbers.add(trackingNumbersItem);
    return this;
  }

   /**
   * List of Tracking Numbers
   * @return trackingNumbers
  **/
  public List<String> getTrackingNumbers() {
    return trackingNumbers;
  }

  public void setTrackingNumbers(List<String> trackingNumbers) {
    this.trackingNumbers = trackingNumbers;
  }

  public ShipResponse labelUrl(String labelUrl) {
    this.labelUrl = labelUrl;
    return this;
  }

   /**
   * Label URL
   * @return labelUrl
  **/
  public String getLabelUrl() {
    return labelUrl;
  }

  public void setLabelUrl(String labelUrl) {
    this.labelUrl = labelUrl;
  }

  public ShipResponse invoiceUrl(String invoiceUrl) {
    this.invoiceUrl = invoiceUrl;
    return this;
  }

   /**
   * Invoice URL
   * @return invoiceUrl
  **/
  public String getInvoiceUrl() {
    return invoiceUrl;
  }

  public void setInvoiceUrl(String invoiceUrl) {
    this.invoiceUrl = invoiceUrl;
  }

  public ShipResponse carrierTrackingUrl(String carrierTrackingUrl) {
    this.carrierTrackingUrl = carrierTrackingUrl;
    return this;
  }

   /**
   * Carrier Tracking URL
   * @return carrierTrackingUrl
  **/
  public String getCarrierTrackingUrl() {
    return carrierTrackingUrl;
  }

  public void setCarrierTrackingUrl(String carrierTrackingUrl) {
    this.carrierTrackingUrl = carrierTrackingUrl;
  }

  public ShipResponse pickupConfirmation(String pickupConfirmation) {
    this.pickupConfirmation = pickupConfirmation;
    return this;
  }

   /**
   * Pickup Confirmation
   * @return pickupConfirmation
  **/
  public String getPickupConfirmation() {
    return pickupConfirmation;
  }

  public void setPickupConfirmation(String pickupConfirmation) {
    this.pickupConfirmation = pickupConfirmation;
  }

  public ShipResponse messages(List<String> messages) {
    this.messages = messages;
    return this;
  }

  public ShipResponse addMessagesItem(String messagesItem) {
    this.messages.add(messagesItem);
    return this;
  }

   /**
   * Messages
   * @return messages
  **/
  public List<String> getMessages() {
    return messages;
  }

  public void setMessages(List<String> messages) {
    this.messages = messages;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShipResponse shipResponse = (ShipResponse) o;
    return Objects.equals(this.shipId, shipResponse.shipId) &&
        Objects.equals(this.trackingNumbers, shipResponse.trackingNumbers) &&
        Objects.equals(this.labelUrl, shipResponse.labelUrl) &&
        Objects.equals(this.invoiceUrl, shipResponse.invoiceUrl) &&
        Objects.equals(this.carrierTrackingUrl, shipResponse.carrierTrackingUrl) &&
        Objects.equals(this.pickupConfirmation, shipResponse.pickupConfirmation) &&
        Objects.equals(this.messages, shipResponse.messages);
  }

  @Override
  public int hashCode() {
    return Objects.hash(shipId, trackingNumbers, labelUrl, invoiceUrl, carrierTrackingUrl, pickupConfirmation, messages);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShipResponse {\n");
    
    sb.append("    shipId: ").append(toIndentedString(shipId)).append("\n");
    sb.append("    trackingNumbers: ").append(toIndentedString(trackingNumbers)).append("\n");
    sb.append("    labelUrl: ").append(toIndentedString(labelUrl)).append("\n");
    sb.append("    invoiceUrl: ").append(toIndentedString(invoiceUrl)).append("\n");
    sb.append("    carrierTrackingUrl: ").append(toIndentedString(carrierTrackingUrl)).append("\n");
    sb.append("    pickupConfirmation: ").append(toIndentedString(pickupConfirmation)).append("\n");
    sb.append("    messages: ").append(toIndentedString(messages)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

