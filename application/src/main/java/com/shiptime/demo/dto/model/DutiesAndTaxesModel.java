/**
 * SANDBOX REST API
 * Welcome to the Rest API documentation. Don't have API keys? Login or create an account <a href=\"https://restapi.appspaces.ca/\">here</a> to get started.
 *
 * OpenAPI spec version: 0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.shiptime.demo.dto.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;


/**
 * DutiesAndTaxesModel
 */
public class DutiesAndTaxesModel   {
  @SerializedName("dutiable")
  private Boolean dutiable = null;

  /**
   * Who pays duties and taxes? (Consignee or Shipper)
   */
  public enum PaidByEnum {
    @SerializedName("CONSIGNEE")
    CONSIGNEE("CONSIGNEE"),
    
    @SerializedName("SHIPPER")
    SHIPPER("SHIPPER");

    private String value;

    PaidByEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("paidBy")
  private PaidByEnum paidBy = null;

  public DutiesAndTaxesModel dutiable(Boolean dutiable) {
    this.dutiable = dutiable;
    return this;
  }

   /**
   * Is the shipment dutiable? Non-dutiable are shipments with no monetary value and are known as documents or general correspondence. All other shipments classified as dutiable shipments by Customs and may be levied customs duties and taxes for entrance into the destination country.
   * @return dutiable
  **/
  public Boolean getDutiable() {
    return dutiable;
  }

  public void setDutiable(Boolean dutiable) {
    this.dutiable = dutiable;
  }

  public DutiesAndTaxesModel paidBy(PaidByEnum paidBy) {
    this.paidBy = paidBy;
    return this;
  }

   /**
   * Who pays duties and taxes? (Consignee or Shipper)
   * @return paidBy
  **/
  public PaidByEnum getPaidBy() {
    return paidBy;
  }

  public void setPaidBy(PaidByEnum paidBy) {
    this.paidBy = paidBy;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DutiesAndTaxesModel dutiesAndTaxesModel = (DutiesAndTaxesModel) o;
    return Objects.equals(this.dutiable, dutiesAndTaxesModel.dutiable) &&
        Objects.equals(this.paidBy, dutiesAndTaxesModel.paidBy);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dutiable, paidBy);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DutiesAndTaxesModel {\n");
    
    sb.append("    dutiable: ").append(toIndentedString(dutiable)).append("\n");
    sb.append("    paidBy: ").append(toIndentedString(paidBy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

